df = pd.read_csv("train1.csv")
X0 = df.iloc[:, :-1].values
X_train = np.hstack([np.ones((X0.shape[0], 1)), X0 ]) # Adding bias
y_train = df.iloc[:, -1].values
y_train = y_train - 1
num_class = 4
y_train_oh = np.eye(num_class)[y_train]
n_features = X_train.shape[1]
W = np.zeros((n_features,num_class))  # Random initialization

df1 = pd.read_csv("test1.csv")
X_test0 = df1.values
X_test = np.hstack([np.ones((X_test0.shape[0], 1)), X_test0])  # Adding bias
print(X_train.shape, y_train.shape, y_train_oh.shape)

def feature_normalize(X):
    num_features = X.shape[1]
    mu = X.mean(axis=0)
    sigma = X.std(axis=0)
    sigma[sigma == 0] = 1
    X_norm = (X - mu) / sigma
    return X_norm, mu, sigma